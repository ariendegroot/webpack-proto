
// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints

@mixin breakpoint($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
  
      // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
  }

$breakpoints: ('xs': 368px, //not used
'sm': 540px,
'md': 768px, 
'lg': 1440px, 
'xl': 1855px) !default;

$grid-columns: (
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        10: 10,
        11: 11,
        12: 12
);

.container,
.container-fluid {
  margin-left: auto;
  margin-right: auto;
}

.container {
  max-width: map-get($breakpoints, 'xl');
  padding: $base-size;
}

.row {
  display: flex;
  box-sizing: border-box;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: -$base-size;
  margin-right: -$base-size;
}

[class*="col"],
.col {
  flex: 1;
}

@mixin create-column($length, $percentage) {
  flex: 0 0 percentage((100 / $length * $percentage) / 100);
  max-width: percentage((100 / $length * $percentage) / 100);
}

@mixin create-offset($length, $percentage) {
  margin-left: percentage((100 / $length * $percentage) / 100);
}

@for $column from 1 through length($grid-columns) {
  .col-xs-#{$column} {
    @include create-column(length($grid-columns), map-get($grid-columns, $column));
  }
  .col-xs-offset-#{$column} {
    @include create-offset(length($grid-columns), map-get($grid-columns, $column));
  }
}

@include breakpoint('sm') {
  @for $column from 1 through length($grid-columns) {
    .col-sm-#{$column} {
      @include create-column(length($grid-columns), map-get($grid-columns, $column));
    }
    .col-sm-offset-#{$column} {
      @include create-offset(length($grid-columns), map-get($grid-columns, $column));
    }
  }
}

@include breakpoint('md') {
  @for $column from 1 through length($grid-columns) {
    .col-md-#{$column} {
      @include create-column(length($grid-columns), map-get($grid-columns, $column));
    }
    .col-md-offset-#{$column} {
      @include create-offset(length($grid-columns), map-get($grid-columns, $column));
    }
  }
}

@include breakpoint('lg') {
  @for $column from 1 through length($grid-columns) {
    .col-lg-#{$column} {
      @include create-column(length($grid-columns), map-get($grid-columns, $column));
    }
    .col-lg-offset-#{$column} {
      @include create-offset(length($grid-columns), map-get($grid-columns, $column));
    }
  }
}

@include breakpoint('xl') {
  @for $column from 1 through length($grid-columns) {
    .col-xl-#{$column} {
      @include create-column(length($grid-columns), map-get($grid-columns, $column));
    }
    .col-xl-offset-#{$column} {
      @include create-offset(length($grid-columns), map-get($grid-columns, $column));
    }
  }
}